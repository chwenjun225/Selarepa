from typing import Any, Dict 
from ..base_agent import BaseAgent 

class Reasoning:
    """
    Encapsulates the agent's reasoning component for action selection.
    """

    @staticmethod
    def decide(
        agent: BaseAgent,
        mental_state: Dict[str, Any]
    ) -> Any:
        """
        Build a prompt with the current mental state, send it through the agent's LLM,
        and return the chosen action.

        Args:
            agent: The Cognition agent instance for LLM calls.
            mental_state: A dictionary of all updated mental-state components.

        Returns:
            The next action as generated by the LLM.
        """
        prompt = (
            f"Current mental state:\n{mental_state}\n\n"
            "Decide the next action the agent should take."
        )
        agent.add_to_memory("user", prompt)
        return agent.generate_response().strip()