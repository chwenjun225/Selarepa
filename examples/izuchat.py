# Cáº¥u trÃºc dá»¯ liá»‡u lÃ  cÃ¡ch tá»• chá»©c vÃ  lÆ°u trá»¯ dá»¯ liá»‡u trong bá»™ nhá»› sao cho truy cáº­p vÃ  xá»­ lÃ½ hiá»‡u quáº£ nháº¥t 
# Tuyáº¿n tÃ­nh - List, Stack, Queue, Deque 
# Phi tuyáº¿n tÃ­nh - Tree, Graph, Tree - DÃ¹ng cho há»‡ thá»‘ng phÃ¢n cáº¥p tÃ¬m kiáº¿m  
# Hash-based - Dict, Set, HashTable - Truy cáº­p cá»±c nhanh 
# Tuáº§n tá»± hÃ³a dá»¯ liá»‡u - LinkedList - Dá»… chÃ¨n/xÃ³a, nhÆ°ng khÃ³ truy cáº­p nhanh 


# ğŸ”§ 1 List (Danh sÃ¡ch )
# a = [1, 2, 3]
# a.append(4)   # [1,2,3,4]
# a[1]          # -> 2
# Truy cáº­p nhanh: O(1)
# ChÃ¨n/xÃ³a Ä‘áº§u cháº­m: O(n)


# ğŸ”§ 2. Stack (NgÄƒn xáº¿p â€“ LIFO)
# stack = []
# stack.append(1)
# stack.append(2)
# stack.pop()  # => 2
# Sá»­ dá»¥ng khi xá»­ lÃ½ theo kiá»ƒu: vÃ o sau ra trÆ°á»›c

# DÃ¹ng trong Ä‘á»‡ quy, duyá»‡t cÃ¢y, undo/redo...


# ğŸ”§ 3. Queue & Deque
# from collections import deque
# q = deque()
# q.append(1)       # thÃªm vÃ o cuá»‘i
# q.popleft()       # xoÃ¡ Ä‘áº§u
# Queue: FIFO â€“ vÃ o trÆ°á»›c ra trÆ°á»›c

# Deque: 2 Ä‘áº§u â†’ nhanh cáº£ appendleft, popright


# ğŸ”§ 4. Dict (Tá»« Ä‘iá»ƒn â€“ Hash Table)
# d = {"agent": "alpha", "id": 1}
# d["agent"]        # => "alpha"
# Truy cáº­p siÃªu nhanh O(1)

# DÃ¹ng Ä‘á»ƒ Ã¡nh xáº¡, cáº¥u hÃ¬nh, lÆ°u tráº¡ng thÃ¡i agent...


# ğŸ”§ 5. Set (Táº­p há»£p â€“ khÃ´ng trÃ¹ng láº·p)
# s = {1, 2, 3}
# s.add(2)          # khÃ´ng thÃªm vÃ¬ Ä‘Ã£ cÃ³
# Ráº¥t nhanh khi kiá»ƒm tra pháº§n tá»­ cÃ³ tá»“n táº¡i khÃ´ng